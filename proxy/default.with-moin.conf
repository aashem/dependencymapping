

upstream api {
    server api:8000;
}

upstream webapp {
    server web:3000;
}

upstream db {
    server db:5432;
}

upstream moin {
    server moin:8080;
}


server {
    # redirect all traffic to ssl
    listen 80 http2;
    return 301 https://$host$request_uri;
}

server {

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name localhost;

    ssl_certificate /etc/nginx/ssl/nginx-dev.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-dev.key;

    # serve app robots
    location = /robots.txt {
       add_header Content-Type text/plain;
       return 200 "User-agent: *\nDisallow: /\n";
    }

    location / {

		proxy_pass         http://webapp/;
		proxy_redirect     off;
		proxy_set_header   Host $host;
		proxy_set_header   X-Real-IP $remote_addr;
		proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header   X-Forwarded-Host $server_name;
	}


    location /postgresql {

		proxy_pass         http://db/;
		proxy_redirect     off;
		proxy_set_header   Host $host;
		proxy_set_header   X-Real-IP $remote_addr;
		proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header   X-Forwarded-Host $server_name;
	}
}




server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.localhost;

    ssl_certificate /etc/nginx/ssl/nginx-dev.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-dev.key;

    # serve api robots
    location = /robots.txt {
       add_header Content-Type text/plain;
       return 200 "User-agent: *\nDisallow: /\n";
    }

    location / {
 		proxy_pass         http://api/;
		proxy_redirect     off;
		proxy_set_header   Host $host;
		proxy_set_header   X-Real-IP $remote_addr;
		proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header   X-Forwarded-Host $server_name;
    }
}

server {
    listen 80 ssl http2;
    listen [::]:80 ssl http2;
    server_name moin.localhost;

    ssl_certificate /etc/nginx/ssl/nginx-dev.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-dev.key;

    # serve api robots
    location = /robots.txt {
       add_header Content-Type text/plain;
       return 200 "User-agent: *\nDisallow: /\n";
    }

    location / {
 		proxy_pass         https://moin/;
		proxy_redirect     off;
		proxy_set_header   Host $host;
		proxy_set_header   X-Real-IP $remote_addr;
		proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header   X-Forwarded-Host $server_name;
    }
}

