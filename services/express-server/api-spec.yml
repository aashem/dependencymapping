swagger: "2.0"
info:
  description: "Simple Dependency Mapping API"
  version: "1.0.0"
  title: "Dependency Mappings API"
  termsOfService: "todo"
  contact:
    email: "vaisanen.toni@gmail.com"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
host: "localhost:30001"
basePath: "/v2"
tags:
- name: "Asset"
  description: "assets"
  externalDocs:
    description: "todo"
    url: "http://docs.localhost/assets"
- name: "Connection"
  description: "connections"
- name: "Mapping"
  description: "mappings"
  externalDocs:
    description: "todo"
    url: "http://docs.localhost/mappings"
schemes:
- "http"
paths:
  /asset:
    post:
      tags:
      - "asset"
      summary: "Add a new asset to the DB"
      description: ""
      operationId: "addAsset"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "An asset object that is to be stored."
        required: true
        schema:
          $ref: "#/definitions/Asset"
      responses:
        405:
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
    put:
      tags:
      - "pet"
      summary: "Update an existing pet"
      description: ""
      operationId: "updatePet"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Asset"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Pet not found"
        405:
          description: "Validation exception"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /connection/:
    get:
      tags:
      - "store"
      summary: "Returns pet inventories by status"
      description: "Returns a map of status codes to quantities"
      operationId: "getInventory"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"

  /mapping/:
    get:
      tags:
      - "store"
      summary: "Returns mapping list based on query"
      description: "Returns a list of mappings"
      operationId: "getMappings"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"

  /tag/:
    post:
      tags:
      - "store"
      summary: "Place an order for a pet"
      description: ""
      operationId: "placeOrder"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "order placed for purchasing the pet"
        required: true
        schema:
          $ref: "#/definitions/Tag"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Tag"
        400:
          description: "Invalid tag"



securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"

definitions:
  Asset:
    type: "object"
    properties:
      _id:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      _embedded:
        type: "object"
        properties:
          connected_to:
            type: "array"
            items:
              type: "object"
              properties:
                href:
                  type: "url"
                name:
                  type: "string"

          tags:
            type: "array"
            items:
              type: "object"
      _links:
        type: "object"
        properties:
          href:
            type: "string"
            format: "url"
    xml:
      name: "Order"
  Connection:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  Mapping:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"

  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"